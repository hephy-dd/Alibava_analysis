---
# Some files to load in, and store data

Pedestal_file: /home/mw/cernbox/HEPHY_macros/Alibava_analysis/Example_Data/Pedestal.hdf5
Delay_scan: ""
Charge_scan: /home/mw/cernbox/HEPHY_macros/Alibava_analysis/Example_Data/charge.hdf5
Measurement_file:
  - /home/mw/cernbox/HEPHY_macros/Alibava_analysis/Example_Data/270V.hdf5

Output_folder: /home/mw/cernbox/HEPHY_macros/Alibava_analysis/OUTPUT
Output_name: "generic"
isBinary: False # If the files provided are Alibava binaries (True) or hdf5 (False) file types
use_charge_cal: True # Defines if to use the passed charge scan (calibration) file or not
Gain_params: [220, 0] # if use_charge_cal == False then these parameters will be used for the gain calc
plot_config_file: plot_cfg.yml # relative path to the plot config file

# Event analysis parameters
Processes: 1 # High numbers of processes causes huge memory overhead, only use when more than 100G are available for large files!!!
SN_cut: 6 # Minimum height of hit
SN_ratio: 0.5 # Ratio at which the program searches for nearby hits below the SN cut
SN_cluster: 5 # SN what the whole cluster must have at minimum to be considered, values great then 7 are useless
Noise_cut: 0.5 # Here the unit is ADC over median of all strips. This discriminates noisy strips.
Manual_mask: [] # Manual channel masking
Chips: [2] # Alibava Chip selection (Alibava has 2 chips with each 128 channels)
numChan: 256
timingWindow:
  - 0 # Minimum timing window
  - 150 # Maximum timing window
max_cluster_size: 20 # Directly affects runtime!!!
sensor_type: "n-in-p" # Sensor Material
calibrate_gain_to: negative # parameters to calibrate the gain pulses to a specific polarity, options are negative, positive, both
automasking: True # Tries to find non physical or garbage hits (wrong ADC direction) and excludes them from calculation (costs moderate CPU)
#optimize: True # Use Numba jit optimizer or not --> Warning no progress bar can be shown with this true, or may be misleading
charge_cal_polynom: 2 # Degree of poly to fit at charge cal curves
range_ADC_fit: [50,150] # range in which will be fitted in ADC if you pass an empty list all data will be used
additional_analysis:
    - Langau
    #- ChargeSharing
    #- PositionResolution

Langau:
  clustersize: [1,2,3,4,5] # Defines which cluster sizes should be fitted with a langau, list of values defines only these, negative values are for all clustersizes
  numClus: [1,2,3,4,5] # Define which/how many clusters per event are taken into account for calculations
  seed_cut_langau: False # If you want a langau from the seed cut strips only or not
  energyCutOff: 500000 # Define where the high energy cutoff is applied in electrons/ADC
  bins: 200 # Define how many bins the Langau plots should have, in case of convergenz problems tune this number!
  fitLangau: False # Fit a langau or not (sometimes the data does not represent a langau at all)
  Charge_scale: False # Convert ADC to electrons
  ClusterCut: 0.5 # Cut from maximum height of langau, at which the fit will start for cluster Langau
  SCCut: 0.33 # Cut from maximum height of langau, at which the fit will start for SC langau

PositionResolution:
  pitch: 100 # um
  SavGol: True
  SavGol_params: [13, 2]
  SavGol_iter: 10
